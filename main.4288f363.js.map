{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","createNotification","state","content","notification","createElement","appendChild","setAttribute","textContent","classList","add","createFirstPromise","Promise","resolve","reject","addEventListener","setTimeout","createSecondPromise","createThirdPromise","leftClick","rightClick","e","button","firstPromise","secondPromise","thirdPromise","then","res","catch","fail"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAmBC,EAAOC,GAC3BC,IAAAA,EAAeL,SAASM,cAAc,OAE5CP,EAAKQ,YAAYF,GACjBA,EAAaG,aAAa,UAAW,gBACrCH,EAAaI,YAAcL,EAEb,YAAVD,EACFE,EAAaK,UAAUC,IAAI,WAE3BN,EAAaK,UAAUC,IAAI,WAI/B,SAASC,IAWA,OAAA,IAAIC,QAVM,SAACC,EAASC,GACzBhB,EAAKiB,iBAAiB,QAAS,WAC7BF,EAAA,gCAGFG,WAAW,WACTF,EAAA,+BACC,OAMP,SAASG,IAWA,OAAA,IAAIL,QAVM,SAACC,GAChBf,EAAKiB,iBAAiB,QAAS,WAC7BF,EAAA,iCAGFf,EAAKiB,iBAAiB,cAAe,WACnCF,EAAA,mCAON,SAASK,IAsBA,OAAA,IAAIN,QArBM,SAACC,GACZM,IAAAA,GAAY,EACZC,GAAa,EAEjBtB,EAAKiB,iBAAiB,YAAa,SAAAM,GAChB,IAAbA,EAAEC,SACJH,GAAY,GAGG,IAAbE,EAAEC,SACJF,GAAa,KAIjBtB,EAAKiB,iBAAiB,YAAa,WAC7BI,GAAaC,GACfP,EAAA,kCAQR,IAAMU,EAAeZ,IACfa,EAAgBP,IAChBQ,EAAeP,IAErBK,EACGG,KAAK,SAAAC,GACJ1B,EAAmB,UAAW0B,KAE/BC,MAAM,SAAAC,GACL5B,EAAmB,QAAS4B,KAGhCL,EAAcE,KAAK,SAAAC,GACjB1B,EAAmB,UAAW0B,KAGhCF,EAAaC,KAAK,SAAAC,GAChB1B,EAAmB,UAAW0B","file":"main.4288f363.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction createNotification(state, content) {\n  const notification = document.createElement('div');\n\n  body.appendChild(notification);\n  notification.setAttribute('data-qa', 'notification');\n  notification.textContent = content;\n\n  if (state === 'success') {\n    notification.classList.add('success');\n  } else {\n    notification.classList.add('warning');\n  }\n}\n\nfunction createFirstPromise() {\n  const resolver = (resolve, reject) => {\n    body.addEventListener('click', () => {\n      resolve(`First promise was resolved`);\n    });\n\n    setTimeout(() => {\n      reject(`First promise was rejected`);\n    }, 3000);\n  };\n\n  return new Promise(resolver);\n};\n\nfunction createSecondPromise() {\n  const resolver = (resolve) => {\n    body.addEventListener('click', () => {\n      resolve(`Second promise was resolved`);\n    });\n\n    body.addEventListener('contextmenu', () => {\n      resolve(`Second promise was resolved`);\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nfunction createThirdPromise() {\n  const resolver = (resolve) => {\n    let leftClick = false;\n    let rightClick = false;\n\n    body.addEventListener('mousedown', e => {\n      if (e.button === 0) {\n        leftClick = true;\n      }\n\n      if (e.button === 2) {\n        rightClick = true;\n      }\n    });\n\n    body.addEventListener('mousedown', () => {\n      if (leftClick && rightClick) {\n        resolve(`Third promise was resolved`);\n      }\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst firstPromise = createFirstPromise();\nconst secondPromise = createSecondPromise();\nconst thirdPromise = createThirdPromise();\n\nfirstPromise\n  .then(res => {\n    createNotification('success', res);\n  })\n  .catch(fail => {\n    createNotification('error', fail);\n  });\n\nsecondPromise.then(res => {\n  createNotification('success', res);\n});\n\nthirdPromise.then(res => {\n  createNotification('success', res);\n});\n"]}